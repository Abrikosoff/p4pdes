#!/usr/bin/env python

# plot trajectory generated by running a PETSc TS program

# example:
#   $ ./plottrajectory -h
#   $ ./ode -ts_monitor binary:t.dat -ts_monitor_solution binary:y.dat
#   $ ./plottrajectory t.dat y.dat

import sys
import argparse
import struct
import matplotlib.pyplot as plt

try:
    import PetscBinaryIO
except:
    print 'no module PetscBinaryIO found ... need link to petsc/bin/PetscBinaryIO.py?'
    sys.exit(9)

parser = argparse.ArgumentParser(description='Read from -ts_monitor and -ts_monitor_solution binary output, and plot trajectory.')
parser.add_argument('tfile',metavar='TDATA',
                    help='file from -ts_monitor binary:TDATA')
parser.add_argument('yfile',metavar='YDATA',
                    help='file from -ts_monitor_solution binary:YDATA')
args = parser.parse_args()

try:
    tfile = open(args.tfile,'r')
except:
    print 'cannot open %s for reading ... stopping' % args.tfile

while True:
    try:
        bytes = tfile.read(8)
    except:
        print "tfile.read() failed"
        sys.exit(1)
    if len(bytes) > 0:
        print struct.unpack('>d',bytes)[0]
    else:
        break

tfile.close()

io = PetscBinaryIO.PetscBinaryIO()
objects = io.readBinaryFile(args.yfile)
print len(objects)
print len(objects[0])
for k in range(len(objects)):
     print 'y[%d][0] = %g, y[%d][1] = %g' % (k,objects[k][0],k,objects[k][1])

